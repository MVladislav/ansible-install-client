---
# tasks file for install_client

# ------------------------------------------------------------------------------
- name: "CLIENT | vscode | check if vs code is installed"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: which code
  register: is_code_exist
  changed_when: false
  failed_when: false
  check_mode: false
  tags:
    - install_client
    - vs_code

# ------------------------------------------------------------------------------
# `$code --list-extensions | xargs -L 1 echo code --install-extension`
- name: "CLIENT | vscode | install vs-code extensions"
  become: true
  become_user: "{{ outer_item.name }}"
  # command: "code --list-extensions | grep {{ item }} -q || code --install-extension {{ item }} && true"
  ansible.builtin.command: "code --install-extension {{ item }}"
  loop: "{{ install_client_vs_code_ext | flatten(levels=1) }}"
  register: code_install_ext
  changed_when: code_install_ext.rc == 0
  when:
    - install_client_vs_code_ext is defined
    - is_code_exist.rc is defined
    - is_code_exist.rc == 0
  tags:
    - install_client
    - vs_code

# ------------------------------------------------------------------------------
- name: "CLIENT | vscode | copy template for vs-code settings.json"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: vs-settings.json.j2
    dest: "~/.config/Code/User/settings.json"
    mode: "0664"
  when:
    - is_code_exist.rc is defined
    - is_code_exist.rc == 0
  tags:
    - install_client
    - vs_code

- name: "CLIENT | vscode | copy template for vs-code keybindings.json"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: vs-keybindings.json.j2
    dest: "~/.config/Code/User/keybindings.json"
    mode: "0664"
  when:
    - is_code_exist.rc is defined
    - is_code_exist.rc == 0
  tags:
    - install_client
    - vs_code
