---
# tasks file for install_client

# ------------------------------------------------------------------------------
# FLATPAK IT SELF
- name: flatpak - install it self
  become: true
  ansible.builtin.apt:
    pkg: flatpak
    state: present
    force_apt_get: true # apt-get instead of aptitude
  when: >
    (install_client_config is defined
    and install_client_config.apt_flatpak is defined
    and install_client_config.apt_flatpak | bool)
    and (install_client_flatpak is defined)
  tags:
    - install_client
    - flatpak

# ------------------------------------------------------------------------------
# REMOTE ADD
- name: flatpak - add remote flathub
  become: true
  community.general.flatpak_remote:
    name: "{{ item.name }}"
    state: present
    flatpakrepo_url: "{{ item.url }}"
    method: "{{ item.method }}"
  loop:
    - name: flathub
      install: true
      url: https://dl.flathub.org/repo/flathub.flatpakrepo
      method: system
    - name: flathub-beta
      install: true
      url: https://flathub.org/beta-repo/flathub-beta.flatpakrepo
      method: system
  when: >
    (item.install is defined and item.install | bool)
    and (install_client_config is defined
    and install_client_config.apt_flatpak is defined
    and install_client_config.apt_flatpak | bool)
    and (install_client_flatpak is defined)
  tags:
    - install_client
    - flatpak

# ------------------------------------------------------------------------------
# CHECK IF SERVICE INSTALLED
- name: flatpak - check if service installed
  become: true
  become_user: "{{ outer_item }}"
  ansible.builtin.shell: set -o pipefail && command -v flatpak >/dev/null 2>&1
  args:
    executable: /bin/bash
  register: is_flatpak_exist
  changed_when: is_flatpak_exist.rc != 0
  # ignore_errors: true
  tags:
    - install_client
    - flatpak

# ------------------------------------------------------------------------------
# INSTALL
- name: flatpak - install services
  become: true
  become_user: "{{ outer_item }}"
  community.general.flatpak:
    name: "{{ item.name }}"
    remote: "{{ item.remote | default('flathub') }}"
    method: user
  loop: "{{ install_client_flatpak|flatten(levels=1) }}"
  when: >
    (install_client_flatpak is defined)
    and (item.install is defined
    and item.install | bool)
    and (is_flatpak_exist.rc is defined
    and is_flatpak_exist.rc == 0)
  tags:
    - install_client
    - flatpak
