---
# tasks file for install_client

# ------------------------------------------------------------------------------
# CHECK IF SERVICE INSTALLED
- name: "CLIENT | snap | check if service installed"
  become: true
  ansible.builtin.command: which snap
  register: is_snap_exist
  changed_when: false
  failed_when: false
  when:
    - install_client_snap is defined
  tags:
    - install_client
    - snap

# ------------------------------------------------------------------------------
- name: "CLIENT | snap | start udev and snapd"
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items:
    - udev
    - snapd
  when:
    - install_client_snap is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - molecule-idempotence-notest
    - install_client
    - snap

# ------------------------------------------------------------------------------
- name: "CLIENT | snap | generate list of packages to install (classic)"
  ansible.builtin.set_fact:
    install_client_snap_packages_to_install_classic: >-
      {{
        install_client_snap
        | selectattr('install', 'eq', true)
        | selectattr('classic', 'defined')
        | selectattr('classic', 'eq', true)
        | map(attribute='name')
        | list
      }}
  when:
    - install_client_snap is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - install_client
    - snap

- name: "CLIENT | snap | generate list of packages to install (non-classic)"
  ansible.builtin.set_fact:
    install_client_snap_packages_to_install: >-
      {{
        (install_client_snap | selectattr('install', 'eq', true) | selectattr('classic', 'defined') | selectattr('classic', 'eq', false))
        + (install_client_snap | selectattr('install', 'eq', true) | rejectattr('classic', 'defined'))
        | map(attribute='name')
        | list
      }}
  when:
    - install_client_snap is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - install_client
    - snap

- name: "CLIENT | snap | classic applications to install"
  ansible.builtin.debug:
    msg: "{{ install_client_snap_packages_to_install_classic }}"
  when:
    - install_client_snap_packages_to_install_classic is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - install_client
    - snap

- name: "CLIENT | snap | non-classic applications to install"
  ansible.builtin.debug:
    msg: "{{ install_client_snap_packages_to_install }}"
  when:
    - install_client_snap_packages_to_install is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - install_client
    - snap

- name: "CLIENT | snap | install classic snap applications"
  become: true
  community.general.snap:
    name: "{{ install_client_snap_packages_to_install_classic }}"
    classic: true
  when:
    - install_client_snap_packages_to_install_classic is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - install_client
    - snap

- name: "CLIENT | snap | install non-classic snap applications"
  become: true
  community.general.snap:
    name: "{{ install_client_snap_packages_to_install }}"
    classic: false
  when:
    - install_client_snap_packages_to_install is defined
    - is_snap_exist.rc is defined
    - is_snap_exist.rc == 0
  tags:
    - install_client
    - snap
