---
# tasks file for install_client

# ------------------------------------------------------------------------------
- name: "CLIENT | gnome gui | install dependencies - 01"
  become: true
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: present
    force_apt_get: true # apt-get instead of aptitude
  loop: "{{ install_client_gdm_gui_setup.dependency | flatten(levels=1) }}"
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.dependency is defined
    - install_client_config is defined
    - install_client_config.gnome_gui_setup_dependencies is defined
    - install_client_config.gnome_gui_setup_dependencies | bool
  tags:
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
- name: "CLIENT | gnome gui | install dependencies - 02"
  become: true
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: present
    force_apt_get: true # apt-get instead of aptitude
  loop: "{{ install_client_gdm_gui_setup.dependency2 | flatten(levels=1) }}"
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.dependency2 is defined
    - >
      (
        (install_client_gdm_gui_setup.overlay is defined
        and install_client_gdm_gui_setup.overlay.setup is defined
        and install_client_gdm_gui_setup.overlay.setup | bool)
        or
        (install_client_gdm_gui_setup.keybindings is defined
        and install_client_gdm_gui_setup.keybindings.install is defined
        and install_client_gdm_gui_setup.keybindings.install | bool)
      )
  tags:
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
# THEME
- name: "CLIENT | gnome gui | theme git clone - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ item.path }}/{{ item.name }}"
    version: "{{ item.branch }}"
    force: true
    update: false
    recursive: true
  loop: "{{ install_client_gdm_gui_setup.theme.git | flatten(levels=1) }}"
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.theme is defined
    - install_client_gdm_gui_setup.theme.git is defined
    - install_client_gdm_gui_setup.theme.install | bool
  tags:
    - install_client
    - ubuntu
    - gnome

- name: "CLIENT | gnome gui | theme execute install - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: "{{ item.path }}/{{ item.name }}/{{ item.file }} {{ item.extra }}"
  loop: "{{ install_client_gdm_gui_setup.theme.git | flatten(levels=1) }}"
  changed_when: true
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.theme is defined
    - install_client_gdm_gui_setup.theme.git is defined
    - install_client_gdm_gui_setup.theme.install | bool
    - item.file is defined
  tags:
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
# APT extensions
- name: CLIENT | gnome gui | install extensions by apt services
  become: true
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: present
    force_apt_get: true # apt-get instead of aptitude
  loop: "{{ install_client_gdm_gui_setup.extensions.apt | flatten(levels=1) }}"
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.extensions is defined
    - install_client_gdm_gui_setup.extensions.apt is defined
    - install_client_gdm_gui_setup.extensions.install is defined
    - install_client_gdm_gui_setup.extensions.install | bool
  tags:
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
# GIT extensions
- name: "CLIENT | gnome gui | clone extensions by git - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "/tmp/{{ outer_item.name }}/{{ item.name }}"
    version: "{{ item.branch }}"
    force: true
    update: false
    recursive: true
  loop: "{{ install_client_gdm_gui_setup.extensions.git | flatten(levels=1) }}"
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.extensions is defined
    - install_client_gdm_gui_setup.extensions.git is defined
    - install_client_gdm_gui_setup.extensions.install is defined
    - install_client_gdm_gui_setup.extensions.install | bool
    - item.install is defined
    - item.install | bool
  tags:
    - install_client
    - ubuntu
    - gnome

- name: "CLIENT | gnome gui | install extensions from git clones - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  community.general.make:
    chdir: "/tmp/{{ outer_item.name }}/{{ item.name }}"
    target: "{{ item.target }}"
  loop: "{{ install_client_gdm_gui_setup.extensions.git | flatten(levels=1) }}"
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.extensions is defined
    - install_client_gdm_gui_setup.extensions.git is defined
    - install_client_gdm_gui_setup.extensions.install is defined
    - install_client_gdm_gui_setup.extensions.install | bool
    - item.install is defined
    - item.install | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome

- name: "CLIENT | gnome gui | restart gdm3 for gui refresh"
  become: true
  ansible.builtin.service:
    name: gdm3
    state: restarted
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.extensions is defined
    - install_client_gdm_gui_setup.extensions.command is defined
    - install_client_gdm_gui_setup.extensions.install | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
# ACTIVATE extensions
- name: "CLIENT | gnome gui | activate extensions - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: "{{ install_client_gdm_gui_setup.extensions.command }} {{ item.name }}"
  # ignore_errors: true
  loop: "{{ install_client_gdm_gui_setup.extensions.activate | flatten(levels=1) }}"
  changed_when: true
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.extensions is defined
    - install_client_gdm_gui_setup.extensions.command is defined
    - install_client_gdm_gui_setup.extensions.install | bool
    - item.install is defined
    - item.install | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
# SETUP OVERLAY
- name: "CLIENT | gnome gui | setup overlay - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: '{{ install_client_gdm_gui_setup.overlay.command }} {{ item.source }} {{ item.key }} "{{ item.value | string }}"'
  loop: "{{ install_client_gdm_gui_setup.overlay.configs | flatten(levels=1) }}"
  register: gnome_setup_overlay
  # NOTE: we ignore error's here, because we only interested setup gnome, for what we have to change anyway if it fails
  failed_when: gnome_setup_overlay.rc not in [0,1]
  changed_when: true
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.overlay is defined
    - install_client_gdm_gui_setup.overlay.command is defined
    - install_client_gdm_gui_setup.overlay.configs is defined
    - install_client_gdm_gui_setup.overlay.setup is defined
    - install_client_gdm_gui_setup.overlay.setup | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome
# SETUP TERMINAL OVERLAY
- name: "CLIENT | gnome terminal | get default profile - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.shell: >
    set -o pipefail && gsettings get org.gnome.Terminal.ProfilesList default | tr -d \'
  args:
    executable: /bin/bash
  register: gnome_setup_terminal_overlay_profile
  changed_when: true
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.terminal_style is defined
    - install_client_gdm_gui_setup.terminal_style.command is defined
    - install_client_gdm_gui_setup.terminal_style.configs is defined
    - install_client_gdm_gui_setup.terminal_style.setup is defined
    - install_client_gdm_gui_setup.terminal_style.setup | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome

- name: "CLIENT | gnome terminal | setup overlay - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: >
    {{ install_client_gdm_gui_setup.terminal_style.command }}
    {{ item.source }}{{ gnome_setup_terminal_overlay_profile.stdout }}/
    {{ item.key }} "{{ item.value | string }}"
  loop: "{{ install_client_gdm_gui_setup.terminal_style.configs | flatten(levels=1) }}"
  register: gnome_setup_terminal_overlay
  # NOTE: we ignore error's here, because we only interested setup gnome, for what we have to change anyway if it fails
  failed_when: gnome_setup_terminal_overlay.rc not in [0,1]
  changed_when: true
  when:
    - gnome_setup_terminal_overlay_profile is defined
    - gnome_setup_terminal_overlay_profile.stdout is defined
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.terminal_style is defined
    - install_client_gdm_gui_setup.terminal_style.command is defined
    - install_client_gdm_gui_setup.terminal_style.configs is defined
    - install_client_gdm_gui_setup.terminal_style.setup is defined
    - install_client_gdm_gui_setup.terminal_style.setup | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome

# ------------------------------------------------------------------------------
# SETUP KEYBINDS
- name: "CLIENT | gnome gui | setup keybinding - {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: '{{ install_client_gdm_gui_setup.keybindings.command }} {{ item.source }} {{ item.key }} "{{ item.value | string }}"'
  loop: "{{ install_client_gdm_gui_setup.keybindings.configs | flatten(levels=1) }}"
  changed_when: true
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.keybindings is defined
    - install_client_gdm_gui_setup.keybindings.command is defined
    - install_client_gdm_gui_setup.keybindings.configs is defined
    - install_client_gdm_gui_setup.keybindings.install is defined
    - install_client_gdm_gui_setup.keybindings.install | bool
  tags:
    - install_client
    - ubuntu
    - gnomeW

- name: "CLIENT | gnome gui | restart gdm3 for gui refresh"
  become: true
  ansible.builtin.service:
    name: gdm3
    state: restarted
  when:
    - install_client_gdm_gui_setup is defined
    - install_client_gdm_gui_setup.overlay is defined
    - install_client_gdm_gui_setup.overlay.configs is defined
    - install_client_gdm_gui_setup.overlay.setup | bool
  tags:
    - molecule-idempotence-notest
    - install_client
    - ubuntu
    - gnome
